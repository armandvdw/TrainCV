/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package traincv;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JTextArea;

/**
 *
 * @author TheOnlyMonkey
 */
public class ImageList extends javax.swing.JFrame {

    public File workingDirectory = new File("C:\\dev");

    /**
     * Creates new form ImageList
     */
    public ImageList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNegImageDirectory = new javax.swing.JTextField();
        btnGenerateNeg = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNegOutputDirectory = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaNegImageList = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPosImageDirectory = new javax.swing.JTextField();
        txtPosImageOutput = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaPosImageList = new javax.swing.JTextArea();
        btnGeneratePositiveList = new javax.swing.JButton();
        btnNegImageFileChooser = new javax.swing.JButton();
        btnNegImageOutputFileChooser = new javax.swing.JButton();
        btnPosImageFileChooser = new javax.swing.JButton();
        btnPosImageFileChooserOutput = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setTitle("List Images");

        btnGenerateNeg.setText("Generate Neg");
        btnGenerateNeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateNegActionPerformed(evt);
            }
        });

        jLabel1.setText("Neg Image Directory");

        jLabel2.setText("Neg Image Output");

        txtAreaNegImageList.setColumns(20);
        txtAreaNegImageList.setRows(5);
        jScrollPane1.setViewportView(txtAreaNegImageList);

        jLabel3.setText("Pos Image Directory");

        jLabel4.setText("Pos Image Output");

        txtAreaPosImageList.setColumns(20);
        txtAreaPosImageList.setRows(5);
        jScrollPane2.setViewportView(txtAreaPosImageList);

        btnGeneratePositiveList.setText("Generate Pos");
        btnGeneratePositiveList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneratePositiveListActionPerformed(evt);
            }
        });

        btnNegImageFileChooser.setText("...");
        btnNegImageFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegImageFileChooserActionPerformed(evt);
            }
        });

        btnNegImageOutputFileChooser.setText("...");
        btnNegImageOutputFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegImageOutputFileChooserActionPerformed(evt);
            }
        });

        btnPosImageFileChooser.setText("...");
        btnPosImageFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPosImageFileChooserActionPerformed(evt);
            }
        });

        btnPosImageFileChooserOutput.setText("...");
        btnPosImageFileChooserOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPosImageFileChooserOutputActionPerformed(evt);
            }
        });

        jLabel5.setText("List Images");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNegImageDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(txtNegOutputDirectory)))
                    .addComponent(btnGenerateNeg)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNegImageFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNegImageOutputFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addGap(111, 111, 111)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGeneratePositiveList)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPosImageDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(txtPosImageOutput))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPosImageFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPosImageFileChooserOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                .addGap(134, 134, 134))
            .addGroup(layout.createSequentialGroup()
                .addGap(368, 368, 368)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNegImageDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(btnNegImageFileChooser))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNegOutputDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNegImageOutputFileChooser)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPosImageDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPosImageFileChooser))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPosImageOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPosImageFileChooserOutput))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerateNeg)
                    .addComponent(btnGeneratePositiveList))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateNegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateNegActionPerformed
        // TODO add your handling code here:
        String currentDirectory = this.txtNegImageDirectory.getText();
        String destinationDirectory = this.txtNegOutputDirectory.getText();
        ArrayList<File> negFileList = this.getImagesInDirectory(currentDirectory);
        this.setTextAreaFileList(negFileList, this.txtAreaNegImageList);
        this.writeNegativeFile(currentDirectory, destinationDirectory);
    }//GEN-LAST:event_btnGenerateNegActionPerformed

    private void btnGeneratePositiveListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneratePositiveListActionPerformed
        // TODO add your handling code here:
        String currentDirectory = this.txtPosImageDirectory.getText();
        String destinationDirectory = this.txtPosImageOutput.getText();
        ArrayList<File> posFileList = this.getImagesInDirectory(currentDirectory);
        this.setTextAreaFileList(posFileList, this.txtAreaPosImageList);
        this.writePositiveFile(currentDirectory, destinationDirectory);
    }//GEN-LAST:event_btnGeneratePositiveListActionPerformed

    private void btnNegImageFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegImageFileChooserActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser(this.workingDirectory.getAbsolutePath());
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int r = fc.showOpenDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            this.txtNegImageDirectory.setText(f.getAbsolutePath());
        }
    }//GEN-LAST:event_btnNegImageFileChooserActionPerformed

    private void btnNegImageOutputFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegImageOutputFileChooserActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser(this.workingDirectory.getAbsolutePath());
        int r = fc.showOpenDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            this.txtNegOutputDirectory.setText(f.getAbsolutePath());
        }
    }//GEN-LAST:event_btnNegImageOutputFileChooserActionPerformed

    private void btnPosImageFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPosImageFileChooserActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser(this.workingDirectory.getAbsolutePath());
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int r = fc.showOpenDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            this.txtPosImageDirectory.setText(f.getAbsolutePath());
        }
    }//GEN-LAST:event_btnPosImageFileChooserActionPerformed

    private void btnPosImageFileChooserOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPosImageFileChooserOutputActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser(this.workingDirectory.getAbsolutePath());
        int r = fc.showOpenDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            this.txtPosImageOutput.setText(f.getAbsolutePath());
        }
    }//GEN-LAST:event_btnPosImageFileChooserOutputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerateNeg;
    private javax.swing.JButton btnGeneratePositiveList;
    private javax.swing.JButton btnNegImageFileChooser;
    private javax.swing.JButton btnNegImageOutputFileChooser;
    private javax.swing.JButton btnPosImageFileChooser;
    private javax.swing.JButton btnPosImageFileChooserOutput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtAreaNegImageList;
    private javax.swing.JTextArea txtAreaPosImageList;
    private javax.swing.JTextField txtNegImageDirectory;
    private javax.swing.JTextField txtNegOutputDirectory;
    private javax.swing.JTextField txtPosImageDirectory;
    private javax.swing.JTextField txtPosImageOutput;
    // End of variables declaration//GEN-END:variables

    public static final String POSDAT = "positives.dat";
    public static final String NEGDAT = "negatives.dat";

    public ArrayList<File> getImagesInDirectory(String dirName) {
        File directory = new File(dirName);
        ArrayList<File> imageFiles = new ArrayList<File>();
        if (directory.isDirectory()) {
            for (File file : directory.listFiles()) {
                if (this.isImage(file.getName())) {
                imageFiles.add(file);
                }
            }
        }
        return imageFiles;
    }

    public boolean fileExists(String file) {
        File f = new File(file);
        return f.exists();
    }

    public boolean isImage(String fileName) {
        if (fileName.contains(".jpg")) {
            return true;
        } else if (fileName.contains(".png")) {
            return true;
        } else if (fileName.contains(".bmp")) {
            return true;
        } else {
            return false;
        }
    }

    public void writeToFile(ArrayList<File> list, String outputLocation, String posNeg) {
        String fileName = "error.txt";
        if (posNeg.equals("pos")) {
            fileName = "/" + POSDAT;
        } else if (posNeg.equals("neg")) {
            fileName = "/" + NEGDAT;
        }
        try {
            PrintWriter writer = new PrintWriter(outputLocation + fileName, "UTF-8");
            for (File file : list) {
                writer.println(file.getAbsolutePath());
            }
            writer.flush();
            writer.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        }
    }

    public void writePositiveFile(String dirName, String trainDir) {
        ArrayList<File> posList = this.getImagesInDirectory(dirName);
        writeToFile(posList, trainDir, "pos");
    }

    public void writeNegativeFile(String dirName, String trainDir) {
        ArrayList<File> negList = this.getImagesInDirectory(dirName);
        writeToFile(negList, trainDir, "neg");
    }

    public void setTextAreaFileList(ArrayList<File> list, JTextArea area) {
        for (File f : list) {
            area.append(f.getName() + "\n");

        }
    }
}
